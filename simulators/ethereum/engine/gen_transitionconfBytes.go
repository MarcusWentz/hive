// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package main

import (
	"encoding/json"
	"errors"
	"math/big"

	"github.com/ethereum/go-ethereum/common/hexutil"
)

var _ = (*TransitionConfigurationV1MarshalingBytes)(nil)

// MarshalJSON marshals as JSON.
func (t TransitionConfigurationBytes) MarshalJSON() ([]byte, error) {
	type TransitionConfigurationBytes struct {
		TerminalTotalDifficulty *hexutil.Big   `json:"terminalTotalDifficulty" gencodec:"required"`
		TerminalBlockHash       hexutil.Bytes  `json:"terminalBlockHash"       gencodec:"required"`
		TerminalBlockNumber     hexutil.Uint64 `json:"terminalBlockNumber"     gencodec:"required"`
	}
	var enc TransitionConfigurationBytes
	enc.TerminalTotalDifficulty = (*hexutil.Big)(t.TerminalTotalDifficulty)
	enc.TerminalBlockHash = t.TerminalBlockHash
	enc.TerminalBlockNumber = hexutil.Uint64(t.TerminalBlockNumber)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (t *TransitionConfigurationBytes) UnmarshalJSON(input []byte) error {
	type TransitionConfigurationBytes struct {
		TerminalTotalDifficulty *hexutil.Big    `json:"terminalTotalDifficulty" gencodec:"required"`
		TerminalBlockHash       *hexutil.Bytes  `json:"terminalBlockHash"       gencodec:"required"`
		TerminalBlockNumber     *hexutil.Uint64 `json:"terminalBlockNumber"     gencodec:"required"`
	}
	var dec TransitionConfigurationBytes
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.TerminalTotalDifficulty == nil {
		return errors.New("missing required field 'terminalTotalDifficulty' for TransitionConfigurationBytes")
	}
	t.TerminalTotalDifficulty = (*big.Int)(dec.TerminalTotalDifficulty)
	if dec.TerminalBlockHash == nil {
		return errors.New("missing required field 'terminalBlockHash' for TransitionConfigurationBytes")
	}
	t.TerminalBlockHash = *dec.TerminalBlockHash
	if dec.TerminalBlockNumber == nil {
		return errors.New("missing required field 'terminalBlockNumber' for TransitionConfigurationBytes")
	}
	t.TerminalBlockNumber = uint64(*dec.TerminalBlockNumber)
	return nil
}
